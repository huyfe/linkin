var Wolsey = require("./wolsey");
require("./lang/fr");
require("./lang/es");
require("./lang/de");

var cardinal = new Wolsey();
cardinal.addLang("fr", new Wolsey.FR());
cardinal.addLang("es", new Wolsey.ES());
cardinal.addLang("de", new Wolsey.DE());

 function test (runs, num) {
    num = num || 17594643;
    runs = runs || 10000;
    var s = new Date();
    for (var i = 0; i <= runs; i++) {
        cardinal.numeral(num);
    }
    var e = new Date();
    console.log(e - s);
}


//cardinal.addLang("fr", Wolsey.FR());

var nums = [];
for (var i = 0; i <= 111; i++) {
    nums.push(i);
}
nums = nums.concat([
    200,
    201,
    298,
    999,
    1000,
    1001,
    1314,
    2000,
    23000,
    23001,
    100000,
    100001,
    1000000,
    1000001,
    2050000,
    10000000,
    10000001,
    100000000,
    100000001,
    100000000000,
    1000000000000,
    78902465231,
    4876423,
    981432875
]);

function generator (lang) {
    nums.forEach(function (num) {
        console.log(cardinal.numeral(num, {lang:lang}));
        console.log(cardinal.ordinal(num, {lang:lang}));
        console.log(cardinal.ordinalAsNumber(num, {lang:lang, gender:"f"}));
    });
}

generator("de");

/*
var langs = ["es", "fr"];
var html = [true, false];
langs.forEach(function (lang) {
    html.forEach(function (val) {
        var bundle = {lang: lang, html: val};
        console.log(cardinal.ordinalAsNumber(101, bundle));
        console.log(cardinal.ordinalAsNumber(1, bundle));
    });
});
*/

for (var i = 0; i < 100; i++) {
    //console.log(cardinal.numeral(i, {lang:"de"}));
}
var more = [101, 102, 346, 999, 1200, 1000026, 5000026];
more.forEach(function(val) {
    //console.log(cardinal.numeral(val, {lang:"de"}));
});

